'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _redux = require('redux');

var _reduxDevtoolsGentestPlugin = require('redux-devtools-gentest-plugin');

//change next line to import your redux combined reducer and your composed store

var _reduxSetup = require('../redux-setup');

//change next line to import your react root component

var _index = require('../index');

var _index2 = _interopRequireDefault(_index);

_chai2['default'].config.truncateThreshold = 0;
var simulateRealTime = false;
var expect = _chai2['default'].expect;
var playEvents = _reduxDevtoolsGentestPlugin.Reducers.playEvents.create(_index2['default']);
var testReducer = _redux.combineReducers({ playEvents: playEvents });
var testStore = _redux.createStore(testReducer);
var waitForStoreChanges = function waitForStoreChanges(done) {
	var timeout = setTimeout(function () {
		unsubscribe();
		done();
	}, 100);
	var unsubscribe = _reduxSetup.store.subscribe(function () {
		clearTimeout(timeout);
		unsubscribe();
		done();
	});
};
var dispatchTestAction = function dispatchTestAction(action) {
	if (simulateRealTime && action.offsetMillis) {
		setTimeout(function () {
			return testStore.dispatch(action);
		}, action.offsetMillis);
	} else {
		testStore.dispatch(action);
	}
};

describe('run recorded UI tests', function () {

	this.timeout(60000);

	it('check computedState_topKeyDown_1 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 0, 'others': 0, 'events': [] } };
		var action = { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 0, 'others': 1, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topInput_2 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 0, 'others': 1, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }] } };
		var action = { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 1, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyUp_3 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 1, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }] } };
		var action = { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 2, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyDown_4 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 2, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }] } };
		var action = { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 3, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topInput_5 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 1, 'others': 3, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }] } };
		var action = { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 3, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyUp_6 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 3, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }] } };
		var action = { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 4, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyDown_7 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 4, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }] } };
		var action = { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 5, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topInput_8 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 2, 'others': 5, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }] } };
		var action = { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 3, 'others': 5, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyUp_9 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 3, 'others': 5, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 } }] } };
		var action = { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 110 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 3, 'others': 6, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 110 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});

	it('check computedState_topKeyDown_10 evaluation', function (done) {
		var curState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 3, 'others': 6, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 110 } }] } };
		var action = { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'Enter', 'keyCode': 13, 'which': 13 }, 'offsetMillis': 754 };
		var nextState = { 'todos': [{ 'text': 'Use Redux', 'marked': false, 'id': 0 }], 'testEvents': { 'clicks': 0, 'changes': 3, 'others': 7, 'events': [{ 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 1576 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'a', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyA', 'keyCode': 65, 'which': 65 }, 'offsetMillis': 119 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 113 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'as', 'offsetMillis': 42 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyS', 'keyCode': 83, 'which': 83 }, 'offsetMillis': 93 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 232 } }, { 'type': 'topInput', 'component': { 'record': true, 'type': 'topInput', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'previousValue': '', 'value': 'asd', 'offsetMillis': 48 } }, { 'type': 'topKeyUp', 'component': { 'record': true, 'type': 'topKeyUp', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'KeyD', 'keyCode': 68, 'which': 68 }, 'offsetMillis': 110 } }, { 'type': 'topKeyDown', 'component': { 'record': true, 'type': 'topKeyDown', 'reactId': '.0.0.0.1', 'targetId': 'newTodo', 'tagName': 'INPUT', 'className': 'new-todo', 'eventData': { 'key': 'Enter', 'keyCode': 13, 'which': 13 }, 'offsetMillis': 754 } }] } };
		expect(_reduxSetup.store.getState()).to.deep.equal(curState);
		_reduxSetup.store.dispatch(action);
		expect(_reduxSetup.store.getState()).to.deep.equal(nextState);
		waitForStoreChanges(done);
		dispatchTestAction(action);
	});
});